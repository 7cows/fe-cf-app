stages:
  - install
  - test
  - e2e_test

cache:
  paths:
    - node_modules/
    - .venv/
    - .cache/pypoetry/

variables:
  FLASK_APP: app.py  # Adjust as per your Flask app entry point
  FLASK_ENV: development
  FLASK_RUN_PORT: 5000

before_script:
  - apt-get update && apt-get install -y python3-pip python3-dev
  - pip3 install poetry
  - poetry config virtualenvs.create false

install_dependencies:
  stage: install
  image: python:3.9  # Specify the Python version you need
  before_script:
    - apt-get update && apt-get install -y python3-venv
    - python3 -m venv .venv
    - source .venv/bin/activate
    - pip install poetry
  script:
    - poetry config virtualenvs.create false
    - poetry install
  artifacts:
    paths:
      - .venv/
    expire_in: 1 hour
  cache:
    key: ${CI_COMMIT_REF_SLUG}-pip
    paths:
      - .venv/
      - .cache/pypoetry/

install_node_dependencies:
  stage: install
  image: node:latest
  script:
    - npm install
  artifacts:
    paths:
      - node_modules/

run_unit_tests:
  stage: test
  image: node:latest
  script:
    - npm test  # Runs Jest unit tests
  dependencies:
    - install_node_dependencies

start_flask_app:
  stage: test
  image: python:3.9
  script:
    - poetry run flask run --host=0.0.0.0 --port=5000 &  # Starts Flask in the background
    - sleep 10  # Gives Flask some time to fully start before running e2e tests
  artifacts:
    paths:
      - .venv/
  cache:
    paths:
      - .cache/pypoetry/

run_cypress_tests:
  stage: e2e_test
  image: cypress/base:latest  # Cypress base image contains all dependencies for running tests
  services:
    - name: selenium/standalone-chrome:latest
      alias: selenium
  script:
    - CYPRESS_BASE_URL=http://localhost:5000 npx cypress run
  dependencies:
    - install_node_dependencies
    - start_flask_app
  artifacts:
    when: always
    reports:
      junit: cypress/results/*.xml
  allow_failure: false

